# NOTE: You have to use single-quoted strings in TOML for regular expressions.
# It's the equivalent of r-strings in Python.  Multiline strings are treated as
# verbose regular expressions by Black.  Use [ ] to denote a significant space
# character.

[tool.black]
skip-string-normalization = true
target-version = ["py310", "py311"]

[tool.codespell]
ignore-words-list = "beng,curren,datas,furst,nd,nin,ot,ser,spects,te,tha,ue,upto"
skip = "./.*,*/ocm00400866,*/read_toc.py,*.it,*.js,*.json,*.mrc,*.page,*.pg_dump,*.po,*.txt,*.xml,*.yml"

[tool.mypy]
ignore_missing_imports = true
pretty = true
scripts_are_modules = true
show_error_codes = true
show_error_context = true
exclude = "(vendor*|venv*)/$"

[[tool.mypy.overrides]]
module = [
  "infogami.*",
  "openlibrary.plugins.worksearch.code"
]
ignore_errors = true

[tool.pytest.ini_options]
asyncio_mode = "strict"

[tool.ruff]
exclude = [
  "./.*",
  "node_modules/*",
  "vendor/*",
]
ignore = [
  "B007",
  "B009",
  "B015",
  "B023",
  "B904",
  "B905",
  "C408",
  "E402",
  "E741",
  "F401",
  "F841",
  "I",
  "PIE790",
  "PIE804",
  "PLC1901",
  "PLR5501",
  "PLW0602",
  "PLW0603",
  "PLW2901",
  "RSE102",
  "SIM102",
  "SIM105",
  "SIM108",
  "SIM115",
  "SIM300",
  "SLF001",
  "UP007",
  "UP031",
  "UP035",
  "UP038",
]
line-length = 162
select = [
  "B",       # flake8-bugbear
  "BLE",     # flake8-blind-except
  "C4",      # flake8-comprehensions
  "C90",     # McCabe cyclomatic complexity
  "E",       # pycodestyle
  "F",       # Pyflakes
  "G010",    # flake8-logging-format
  "I",       # isort
  "ICN",     # flake8-import-conventions
  "INT",     # flake8-gettext
  "PIE",     # flake8-pie
  "PL",      # Pylint
  "PYI",     # flake8-pyi
  "RSE",     # flake8-raise
  "SIM",     # flake8-simplify
  "SLF",     # flake8-self
  "T10",     # flake8-debugger
  "UP",      # pyupgrade
  "W",       # pycodestyle
  "YTT",     # flake8-2020
  # "A",     # flake8-builtins
  # "ANN",   # flake8-annotations
  # "ARG",   # flake8-unused-arguments
  # "COM",   # flake8-commas
  # "D",     # pydocstyle
  # "DJ",    # flake8-django
  # "DTZ",   # flake8-datetimez
  # "EM",    # flake8-errmsg
  # "ERA",   # eradicate
  # "EXE",   # flake8-executable
  # "FBT",   # flake8-boolean-trap
  # "G",     # flake8-logging-format
  # "INP",   # flake8-no-pep420
  # "ISC",   # flake8-implicit-str-concat
  # "N",     # pep8-naming
  # "NPY",   # NumPy-specific rules
  # "PD",    # pandas-vet
  # "PGH",   # pygrep-hooks
  # "PT",    # flake8-pytest-style
  # "PTH",   # flake8-use-pathlib
  # "Q",     # flake8-quotes
  # "RET",   # flake8-return
  # "RUF",   # Ruff-specific rules
  # "S",     # flake8-bandit
  # "T20",   # flake8-print
  # "TCH",   # flake8-type-checking
  # "TID",   # flake8-tidy-imports
  # "TRY",   # tryceratops
]
target-version = "py311"

[tool.ruff.mccabe]
max-complexity = 41

[tool.ruff.pylint]
allow-magic-value-types = ["bytes", "float", "int", "str"]
max-args = 15
max-branches = 42
max-returns = 14
max-statements = 106

[tool.ruff.per-file-ignores]
"openlibrary/admin/stats.py" = ["BLE001"]
"openlibrary/catalog/get_ia.py" = ["BLE001", "E722"]
"openlibrary/catalog/marc/marc_binary.py" = ["BLE001"]
"openlibrary/catalog/utils/edit.py" = ["E722"]
"openlibrary/catalog/utils/query.py" = ["E722"]
"openlibrary/core/booknotes.py" = ["E722"]
"openlibrary/core/bookshelves.py" = ["BLE001"]
"openlibrary/core/helpers.py" = ["BLE001"]
"openlibrary/core/processors/invalidation.py" = ["BLE001"]
"openlibrary/core/ratings.py" = ["E722"]
"openlibrary/core/sponsorships.py" = ["E722"]
"openlibrary/core/stats.py" = ["BLE001"]
"openlibrary/coverstore/code.py" = ["E722"]
"openlibrary/i18n/__init__.py" = ["BLE001"]
"openlibrary/plugins/admin/code.py" = ["E722"]
"openlibrary/plugins/admin/mem.py" = ["E722"]
"openlibrary/plugins/admin/memory.py" = ["E722"]
"openlibrary/plugins/admin/services.py" = ["BLE001"]
"openlibrary/plugins/books/dynlinks.py" = ["E722"]
"openlibrary/plugins/books/readlinks.py" = ["E722"]
"openlibrary/plugins/importapi/code.py" = ["BLE001"]
"openlibrary/plugins/ol_infobase.py" = ["BLE001"]
"openlibrary/plugins/openlibrary/code.py" = ["BLE001", "E722"]
"openlibrary/plugins/openlibrary/connection.py" = ["E722"]
"openlibrary/plugins/openlibrary/stats.py" = ["BLE001"]
"openlibrary/plugins/upstream/account.py" = ["BLE001"]
"openlibrary/plugins/upstream/borrow.py" = ["BLE001", "E722"]
"openlibrary/plugins/upstream/models.py" = ["BLE001"]
"openlibrary/plugins/upstream/utils.py" = ["BLE001"]
"openlibrary/solr/update_work.py" = ["E722"]
"openlibrary/utils/retry.py" = ["BLE001"]
"scripts/copydocs.py" = ["BLE001"]
"scripts/delete_import_items.py" = ["BLE001"]
"scripts/import_book_covers.py" = ["BLE001"]
"scripts/lc_marc_update.py" = ["E722"]
"scripts/manage-imports.py" = ["BLE001"]
"scripts/sitemaps/sitemap.py" = ["BLE001"]
"tests/integration/__init__.py" = ["E722"]
"tests/integration/test_loans.py" = ["E722"]
"tests/*" = ["S101"]
