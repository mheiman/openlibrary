# NOTE: You have to use single-quoted strings in TOML for regular expressions.
# It's the equivalent of r-strings in Python.  Multiline strings are treated as
# verbose regular expressions by Black.  Use [ ] to denote a significant space
# character.

[tool.black]
skip-string-normalization = true
target-version = ["py310", "py311"]

[tool.pytest.ini_options]
asyncio_mode = "strict"

[tool.mypy]
ignore_missing_imports = true
pretty = true
scripts_are_modules = true
show_error_codes = true
show_error_context = true
exclude = "(vendor*|venv*)/$"

[[tool.mypy.overrides]]
module = [
  "infogami.*",
  "openlibrary.plugins.worksearch.code"
]
ignore_errors = true




[tool.codespell]
ignore-words-list = "beng,curren,datas,furst,nd,nin,ot,ser,spects,te,tha,ue,upto"
skip = "./.*,*/ocm00400866,*/read_toc.py,*.it,*.js,*.json,*.mrc,*.page,*.pg_dump,*.po,*.txt,*.xml,*.yml"

[tool.ruff]
exclude = [
    "./.*",
    "vendor/*",
    "node_modules/*",
]
ignore = [
    "E402",
    "E722",
    "E741",
    "F401",
    "F841",
    "I",
]
line-length = 200
select = [
    "C9",
    "E",
    "F",
    "G010",
    "PLC",
    "W",
]
target-version = "py310"

[tool.ruff.mccabe]
max-complexity = 41
